image: skame/docker-compose

variables:
  DOCKER_DRIVER: overlay

services:
  - docker:dind

stages:
  - build

docker-build:
  stage: build
  script:
    - wget -q https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz
    - tar zxvf go1.9.2.linux-amd64.tar.gz -C $HOME
    - export GOROOT=$HOME/go
    - export PATH=$PATH:$GOROOT/bin
    - export GOPATH=$HOME/work
    - export PATH=$PATH:$GOPATH/bin
    - mkdir -p $GOPATH/src/$(dirname $(pwd))
    - ln -s $(pwd) $GOPATH/src/$(dirname $(pwd))
    - cd $GOPATH/src/$(pwd)
    - cp /etc/ssl/certs/ca-certificates.crt .
    - go get
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo
    - export DOCKER_HOST=tcp://docker:2375
    - docker info
    - export tag="${CI_BUILD_REF_SLUG}-$(git rev-parse --short HEAD)"
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN ${DOCKER_ENV_CI_REGISTRY}
    - docker build -t ${CI_REGISTRY_IMAGE}:${tag} .
    - docker tag ${CI_REGISTRY_IMAGE}:${tag} ${CI_REGISTRY_IMAGE}:${CI_BUILD_REF_SLUG}
    - '[ "${CI_BUILD_REF_SLUG}" = master ] && docker tag ${CI_REGISTRY_IMAGE}:${tag} ${CI_REGISTRY_IMAGE}:latest'
    - '[ "${CI_BUILD_REF_SLUG}" = master ] && docker push ${CI_REGISTRY_IMAGE}:latest'
    - docker push ${CI_REGISTRY_IMAGE}:${CI_BUILD_REF_SLUG}
    - docker push ${CI_REGISTRY_IMAGE}:${tag}
